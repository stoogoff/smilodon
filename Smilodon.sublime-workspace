{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"C",
				"CATEGORY_ID_PREFIX"
			],
			[
				"paret",
				"parentId"
			],
			[
				"cer",
				"createState"
			],
			[
				"default",
				"defaultMarkdownParser"
			],
			[
				"cat",
				"categories"
			],
			[
				"en",
				"entityId"
			],
			[
				"mut",
				"mutableColumns"
			],
			[
				"create",
				"createMutableColumns"
			],
			[
				"sort",
				"sortedEntities"
			],
			[
				"prop",
				"properties"
			],
			[
				"With",
				"WithProjects"
			],
			[
				"proj",
				"projectData"
			],
			[
				"fet",
				"fetchOnServer"
			],
			[
				"by",
				"allByProject"
			],
			[
				"MEnu",
				"MENU_ITEMS"
			],
			[
				"c",
				"category"
			],
			[
				"PR",
				"PROPERTY_TYPES"
			],
			[
				"categ",
				"category"
			],
			[
				"cate",
				"categoryId"
			],
			[
				"ca",
				"categories"
			],
			[
				"CAT",
				"categoryTitle"
			],
			[
				"cons",
				"constructor"
			],
			[
				"grid-template",
				"grid-template-columns"
			],
			[
				"no",
				"nowrap"
			],
			[
				"grid-",
				"grid-template-columns"
			],
			[
				"charac",
				"characteristics"
			],
			[
				"sk",
				"skillIncreases"
			],
			[
				"add",
				"addAdvantage"
			],
			[
				"remove",
				"removeBackground"
			],
			[
				"ChAt",
				"ChAtMax"
			],
			[
				"CHARC",
				"CHARACTERISTIC_MAX"
			],
			[
				"grid",
				"grid-cols-2"
			],
			[
				"to",
				"toUpperCase"
			],
			[
				"charact",
				"characteristics"
			],
			[
				"chara",
				"characteristics"
			],
			[
				"has",
				"hasDivineHeritage"
			],
			[
				"cha",
				"characteristics"
			],
			[
				"SELEC",
				"SELECTED_BY_OTHER"
			],
			[
				"SELE",
				"SELECTED_BY_OTHER"
			],
			[
				"char",
				"characteristics"
			],
			[
				"characte",
				"characteristics"
			],
			[
				"character",
				"characteristics"
			],
			[
				"CHA",
				"CHARACTERISTIC_MAX"
			],
			[
				"CHAR",
				"CHARACTERISTICS"
			],
			[
				"HER",
				"HERITAGE_MORTAL"
			],
			[
				"HERI",
				"HERITAGE_MORTAL"
			],
			[
				"acco",
				"accordion-item"
			],
			[
				"chevron",
				"chevron-down"
			],
			[
				"paren",
				"parentSelection"
			],
			[
				"heri",
				"heritages"
			],
			[
				"divini",
				"divinities"
			],
			[
				"show",
				"showAllSkills"
			],
			[
				"re",
				"registerHelper\twarning"
			],
			[
				"font-s",
				"font-size\tproperty"
			],
			[
				"text",
				"text-transform\tproperty"
			],
			[
				"min-",
				"min-height"
			],
			[
				"text-",
				"text-transform"
			],
			[
				"font-",
				"font-size"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"backgorun",
				"background-color"
			],
			[
				"bacg",
				"background-color"
			],
			[
				"column",
				"column-count"
			],
			[
				"colle",
				"collections"
			],
			[
				"backgou",
				"background-color"
			],
			[
				"tetx",
				"text-center"
			],
			[
				"di",
				"display"
			],
			[
				"background",
				"background-color"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"font",
				"font-family"
			],
			[
				"meta",
				"metadata"
			],
			[
				"inli",
				"inline-block"
			],
			[
				"padding",
				"padding-left"
			],
			[
				"bakc",
				"background-color"
			],
			[
				"backgoru",
				"background-color"
			],
			[
				"box",
				"box-medium"
			],
			[
				"page",
				"page-break-after"
			],
			[
				"a",
				"avoid"
			],
			[
				"marign-",
				"margin-top"
			]
		]
	},
	"buffers":
	[
		{
			"file": "state/entity.js",
			"settings":
			{
				"buffer_size": 1494,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgQAAAAAAAAqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\t//"
					},
					"AwAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " npt"
					},
					"BAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAANAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAADQEAAAAAAAANQQAAAAAAAAAAAAANQQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					5,
					"left_delete",
					null,
					"BQAAADYEAAAAAAAANgQAAAAAAAABAAAAczUEAAAAAAAANQQAAAAAAAABAAAAaTQEAAAAAAAANAQAAAAAAAABAAAAIDMEAAAAAAAAMwQAAAAAAAABAAAAdDIEAAAAAAAAMgQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "ot"
					},
					"AgAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " itself"
					},
					"BwAAADQEAAAAAAAANQQAAAAAAAAAAAAANQQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADcEAAAAAAAAAAAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGcEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABrBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwQAAAAAAABnBAAAAAAAAP///////+9/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGsEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawQAAAAAAABrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " has"
					},
					"BAAAAG0EAAAAAAAAbgQAAAAAAAAAAAAAbgQAAAAAAABvBAAAAAAAAAAAAABvBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAcQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEEAAAAAAAAcgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQQAAAAAAABxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAHIEAAAAAAAAcwQAAAAAAAAAAAAAcwQAAAAAAAB0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgQAAAAAAAByBAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " least"
					},
					"BgAAAHQEAAAAAAAAdQQAAAAAAAAAAAAAdQQAAAAAAAB2BAAAAAAAAAAAAAB2BAAAAAAAAHcEAAAAAAAAAAAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAHoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " one"
					},
					"BAAAAHoEAAAAAAAAewQAAAAAAAAAAAAAewQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAH0EAAAAAAAAAAAAAH0EAAAAAAAAfgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " matching"
					},
					"CQAAAH4EAAAAAAAAfwQAAAAAAAAAAAAAfwQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIEEAAAAAAAAAAAAAIEEAAAAAAAAggQAAAAAAAAAAAAAggQAAAAAAACDBAAAAAAAAAAAAACDBAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACGBAAAAAAAAAAAAACGBAAAAAAAAIcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgQAAAAAAAB+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " tag"
					},
					"BAAAAIcEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACJBAAAAAAAAAAAAACJBAAAAAAAAIoEAAAAAAAAAAAAAIoEAAAAAAAAiwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwQAAAAAAACHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAAIsEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACNBAAAAAAAAAAAAACNBAAAAAAAAI4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwQAAAAAAACLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " cata"
					},
					"BQAAAI4EAAAAAAAAjwQAAAAAAAAAAAAAjwQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJEEAAAAAAAAAAAAAJEEAAAAAAAAkgQAAAAAAAAAAAAAkgQAAAAAAACTBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgQAAAAAAACOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAJIEAAAAAAAAkgQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "eg"
					},
					"AgAAAJIEAAAAAAAAkwQAAAAAAAAAAAAAkwQAAAAAAACUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgQAAAAAAACSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "ory"
					},
					"AwAAAJQEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAJcEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "categr"
					},
					"BgAAAKYEAAAAAAAApwQAAAAAAAAAAAAApwQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKkEAAAAAAAAAAAAAKkEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAACrBAAAAAAAAAAAAACrBAAAAAAAAKwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgQAAAAAAACmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAAKsEAAAAAAAAqwQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "ory,"
					},
					"BAAAAKsEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACtBAAAAAAAAAAAAACtBAAAAAAAAK4EAAAAAAAAAAAAAK4EAAAAAAAArwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwQAAAAAAACrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8EAAAAAAAAsAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAI8EAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACRBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwQAAAAAAACPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAJEEAAAAAAAAkgQAAAAAAAAAAAAAkgQAAAAAAACTBAAAAAAAAAAAAACTBAAAAAAAAJQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJQEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAJcEAAAAAAAAAAAAAJcEAAAAAAAAmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJgEAAAAAAAAmQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAQAAAAAAACYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADJBAAAAAAAAAAAAADGBAAAAAAAAMYEAAAAAAAAAwAAAAkJCcYEAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQQAAAAAAADFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAIFAAAAAAAAAwUAAAAAAAAAAAAAAwUAAAAAAAAHBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"left_delete",
					null,
					"AQAAAAYFAAAAAAAABgUAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAABwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\ncategory"
					},
					"DAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADJBAAAAAAAAAAAAADGBAAAAAAAAMYEAAAAAAAAAwAAAAkJCcYEAAAAAAAAygQAAAAAAAAAAAAAygQAAAAAAADLBAAAAAAAAAAAAADLBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAAzQQAAAAAAAAAAAAAzQQAAAAAAADOBAAAAAAAAAAAAADOBAAAAAAAAM8EAAAAAAAAAAAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADRBAAAAAAAAAAAAADRBAAAAAAAANIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQQAAAAAAADFBAAAAAAAAP///////+9/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " ==="
					},
					"BAAAANIEAAAAAAAA0wQAAAAAAAAAAAAA0wQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANUEAAAAAAAAAAAAANUEAAAAAAAA1gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gQAAAAAAADSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYEAAAAAAAA1wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gQAAAAAAADWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "enti"
					},
					"BAAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAADZBAAAAAAAANoEAAAAAAAAAAAAANoEAAAAAAAA2wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "ty.category"
					},
					"CwAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADdBAAAAAAAAAAAAADdBAAAAAAAAN4EAAAAAAAAAAAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADgBAAAAAAAAAAAAADgBAAAAAAAAOEEAAAAAAAAAAAAAOEEAAAAAAAA4gQAAAAAAAAAAAAA4gQAAAAAAADjBAAAAAAAAAAAAADjBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADmBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wQAAAAAAADbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gQAAAAAAADmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert_completion",
					{
						"completion": "tags",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "tags"
					},
					"AQAAAOcEAAAAAAAA6wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AgAAAOsEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					5,
					"right_delete",
					null,
					"BQAAAO4EAAAAAAAA7gQAAAAAAAABAAAACu4EAAAAAAAA7gQAAAAAAAABAAAACe4EAAAAAAAA7gQAAAAAAAABAAAACe4EAAAAAAAA7gQAAAAAAAABAAAACe4EAAAAAAAA7gQAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAA7gQAAAAAAADuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					4,
					"right_delete",
					null,
					"BAAAACYFAAAAAAAAJgUAAAAAAAABAAAACiYFAAAAAAAAJgUAAAAAAAABAAAACSYFAAAAAAAAJgUAAAAAAAABAAAACSYFAAAAAAAAJgUAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAJgUAAAAAAAAmBQAAAAAAAP///////+9/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gQAAAAAAADmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"left_delete",
					null,
					"AQAAAOoEAAAAAAAA6gQAAAAAAAAHAAAAdGFnc3x8IA",
					"AQAAAAAAAAABAAAA8QQAAAAAAADqBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pages/projects/_projectId/entities/_entityId/index.vue",
			"settings":
			{
				"buffer_size": 2796,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": " v-if="
					},
					"BgAAADADAAAAAAAAMQMAAAAAAAAAAAAAMQMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADMDAAAAAAAAAAAAADMDAAAAAAAANAMAAAAAAAAAAAAANAMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAMAAAAAAAAwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADYDAAAAAAAAOAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "entiti"
					},
					"BgAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAADwDAAAAAAAAPAMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAPQMAAAAAAAA9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "y.tags."
					},
					"BwAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAEIDAAAAAAAAQgMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": ".length"
					},
					"BwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "{\n  \"_id\": \"game:one-page-wonders\",\n  \"_rev\": \"4-9a99239989c5067b7a670393d3e45da8\",\n  \"type\": \"Game\",\n  \"title\": \"WILD\",\n  \"sort\": 2,\n  \"summary\": \"The **WILD: Dream Dive Training Simulation** is a tabletop roleplaying game about entering a shared dream. The players take on the role of a new recruits at ClarIT learning the basics of the dreamshare technology.\\n\",\n  \"banner\": \"wild/banner.jpg\",\n  \"images\": [\n    \"wild/cover.jpg\",\n    \"wild/02-clarity.png\",\n    \"wild/12-strength-rogue.png\"\n  ],\n  \"links\": [\n    {\n      \"title\": \"website\",\n      \"url\": \"https://www.wildrpg.com/\"\n    },\n    {\n      \"title\": \"GameFound\",\n      \"url\": \"https://gamefound.com/projects/stoo/wild-dream-dive-training-simulation\"\n    },\n    {\n      \"title\": \"CDG Marketplace\",\n      \"url\": \"https://composedreamgames.com/marketplace/WILD\"\n    },\n    {\n      \"title\": \"DriveThru\",\n      \"url\": \"https://www.drivethrurpg.com/product/359987/WILD-Dream-Dive-Training-Simulation\"\n    },\n    {\n      \"title\": \"itch\",\n      \"url\": \"https://we-evolve.itch.io/wild-dream-dive-training-simulation\"\n    }\n  ],\n  \"content\": \"**The development of the ALIS** dreamshare device has changed the world.\\n\\nThe technology allows dreamers to enter a shared experience, to delve into the unconscious minds of those in need of help, to create worlds of adventure and exploration, to experience a reality limited only by your imagination.\\n\\nBut without the proper training, using the **ALIS** device can be a dangerous and frightening experience.\\n\\nIn the **WILD RPG** players enter this world, where technology and dreams meet. Where dream creatures struggle to break into the waking world, and where you can live out your wildest dreams.\\n\\n## The Setting\\n\\nThe waking world of **WILD** is similar to the world around us. The same technology, entertainment, and events. The major difference is the existence of dreamshare tech.\\n\\nPioneered by Carter Henderson, the dreamshare technology began life as an advanced BCI (Brain-Computer Interface) designed to allow users to access computers when their hands are occupied (such as pilots, divers, or astronauts) or when physically unable. It was due to revolutionise how we access computers, bringing a new level of ease to those who need to use it the most. As he was presenting this new technology at the Electronic Media Expo, he received word that his daughter, Clarity, had been involved in an accident, and she remained in a coma with above average brain activity. Carter and his team of devs spent every moment working on adapting this new BCI to allow him to communicate with Clarity within her comatose state.\\n\\nAnd so the dreamshare device was born.\\n\\nThe **ALIS** device (which stands for **A**ccelerated **L**ucidity **I**nduction **S**ystem) uses a feedback loop - taking the imagery the subject is experiencing within the dream, enhancing it and sending it back into the mind of the dreamer. The result is an extremely vivid environment almost indistinguishable from the waking world. The device takes this information and can link additional users into this loop, allowing multiple dreamers to experience the same environment together, diving into the same dream, interacting with each other while simultaneously enhancing the setting.\\n\\n## The Game\\n\\nThe **WILD: Dream Dive Training Simulation** is a tabletop roleplaying game that can be played solo, or with a group of friends with or without one player taking on the role of the DreamMaster.\\n\\nYou take on the role of a new recruit at ClarIT, learning the basics of the dreamshare technology by diving into a training simulation of Carter Henderson’s attempt to communicate with his comatose daughter. However, the environment is defined randomly, meaning every dive into this simulation will be different.\\n\\nCharacters are defined by four Attributes, and five Abilities. Tasks, whether this is doing something dangerous, convincing someone (or something) to do something, or engaging in combat, are resolved with a simple draw of Tarot cards. Minor Arcana values under your Attribute + Ability is a Success. Matching the suit that relates to the Attribute being used is another Success, and drawing a card that matches the Ability is also a Success. The more Successes you draw, the better the result and the more likely you are to avoid any consequences. Major Arcana do weird things…\\n\\nThe Tarot is a very important element to WILD, and the game can be played using the custom WILD Tarot Deck or a standard Tarot deck like the traditional Rider-Waite-Smith deck. If you do not have access to Tarot cards, a random card draw system is provided for use with dice.\\n\\nThe Tarot also defines the course of the dive - the locations you explore, the people you meet, and the obstacles you face. These can be defined in advance, elaborated by a DreamMaster, or drawn and interpreted on the spot. Every dive will be different and can go on for as long as you define, or until you wake from your injuries, or find Clarity within her dreamscape.\"\n}",
			"settings":
			{
				"buffer_size": 5028,
				"line_ending": "Unix",
				"name": "{"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAmBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "one-page-wonde"
					},
					"DwAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASAAAAAAAAAAQAAAB3aWxkEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "rs"
					},
					"AgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: html"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/stoo/Dev/smilodon",
		"/Users/stoo/Dev/smilodon/assets",
		"/Users/stoo/Dev/smilodon/components",
		"/Users/stoo/Dev/smilodon/components/categories",
		"/Users/stoo/Dev/smilodon/layouts",
		"/Users/stoo/Dev/smilodon/mixins",
		"/Users/stoo/Dev/smilodon/pages",
		"/Users/stoo/Dev/smilodon/pages/projects",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/categories",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/categories/_categoryId",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/entities",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/entities/_entityId",
		"/Users/stoo/Dev/smilodon/plugins",
		"/Users/stoo/Dev/smilodon/state",
		"/Users/stoo/Dev/smilodon/static",
		"/Users/stoo/Dev/smilodon/static/seed",
		"/Users/stoo/Dev/smilodon/utils"
	],
	"file_history":
	[
		"/Users/stoo/Dev/smilodon/components/categories/category-tree.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/entities/_entityId/index.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/index.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-map.vue",
		"/Users/stoo/Dev/smilodon/state/entity.js",
		"/Users/stoo/Dev/smilodon/components/categories/category-panel.vue",
		"/Users/stoo/Dev/smilodon/components/categories/category-item.vue",
		"/Users/stoo/Dev/smilodon/components/breadcrumb.vue",
		"/Users/stoo/Dev/smilodon/components/categories/category-editor.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/categories/_categoryId/index.vue",
		"/Users/stoo/Dev/smilodon/utils/access.js",
		"/Users/stoo/Dev/smilodon/state/project.js",
		"/Users/stoo/Dev/smilodon/static/seed/categories.json",
		"/Users/stoo/Dev/smilodon/components/icon-view.vue",
		"/Users/stoo/Dev/smilodon/assets/styles.css",
		"/Users/stoo/Dev/smilodon/nuxt.config.js",
		"/Users/stoo/Dev/smilodon/layouts/default.vue",
		"/Users/stoo/Dev/smilodon/components/main-nav.vue",
		"/Users/stoo/Dev/smilodon/components/editor/editor.vue",
		"/Users/stoo/Dev/smilodon/components/editor/block-list.vue",
		"/Users/stoo/Dev/smilodon/components/editor/command-button.vue",
		"/Users/stoo/Dev/smilodon/components/editor/markdown-editor.js",
		"/Users/stoo/Dev/smilodon/components/editor/config.js",
		"/Users/stoo/Dev/smilodon/components/entities/entity-editor.vue",
		"/Users/stoo/Dev/smilodon/components/editor/emitter.js",
		"/Users/stoo/Dev/smilodon/utils/string.js",
		"/Users/stoo/Dev/smilodon/components/projects/project-editor.vue",
		"/Users/stoo/Dev/smilodon/package.json",
		"/Users/stoo/Dev/smilodon/node_modules/tiptap-markdown/package.json",
		"/Users/stoo/Dev/smilodon/components/editor/command-action.vue",
		"/Users/stoo/Dev/smilodon/components/editor/schema.js",
		"/Users/stoo/Dev/smilodon/components/editor/italic.vue",
		"/Users/stoo/Dev/smilodon/components/editor/bold.vue",
		"/Users/stoo/Dev/smilodon/components/editor/toggle.js",
		"/Users/stoo/Dev/smilodon/components/html-editor.vue",
		"/Users/stoo/Dev/smilodon/static/seed/entities.json",
		"/Users/stoo/Dev/smilodon/node_modules/@npmcli/fs/lib/with-temp-dir.js",
		"/Users/stoo/Dev/smilodon/components/tags/tag-cloud.vue",
		"/Users/stoo/Dev/smilodon/components/tags/tag-view.vue",
		"/Users/stoo/Dev/smilodon/components/tags/tag-editor.vue",
		"/Users/stoo/Dev/smilodon/components/tags/tag-list.vue",
		"/Users/stoo/Dev/smilodon/components/tag-view.vue",
		"/Users/stoo/Dev/smilodon/tailwind.config.js",
		"/Users/stoo/Dev/smilodon/components/tag-cloud.vue",
		"/Users/stoo/Dev/smilodon/components/markdown.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/edit.vue",
		"/Users/stoo/Dev/smilodon/state/category.js",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/categories/_categoryId/edit.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/entities/_entityId/edit.vue",
		"/Users/stoo/Dev/smilodon/components/tag-list.vue",
		"/Users/stoo/Dev/smilodon/components/table/filtered-table.vue",
		"/Users/stoo/Dev/smilodon/pages/index.vue",
		"/Users/stoo/Dev/smilodon/components/confirm-dialogue.vue",
		"/Users/stoo/Dev/smilodon/components/entities/property-editor.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-item.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-icon.vue",
		"/Users/stoo/Dev/smilodon/components/icon-button.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-overlay.vue",
		"/Users/stoo/Dev/smilodon/components/loading-spinner.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-table.vue",
		"/Users/stoo/Dev/smilodon/utils/icons.js",
		"/Users/stoo/Dev/smilodon/utils/event-bus.js",
		"/Users/stoo/Dev/smilodon/components/categories/CategoryPanel.vue",
		"/Users/stoo/Dev/smilodon/components/entities/EntityEditor.vue",
		"/Users/stoo/Dev/smilodon/components/entities/EntityOverlay.vue",
		"/Users/stoo/Dev/smilodon/components/categories/CategoryItem.vue",
		"/Users/stoo/Dev/smilodon/layouts/site.vue",
		"/Users/stoo/Dev/smilodon/layouts/no-action.vue",
		"/Users/stoo/Dev/smilodon/components/entities/EntityItem.vue",
		"/Users/stoo/Dev/smilodon/components/categories/CategoryTree.vue",
		"/Users/stoo/Dev/smilodon/utils/assert.js",
		"/Users/stoo/Dev/smilodon/plugins/client.js",
		"/Users/stoo/Dev/smilodon/components/entities/EntityIcon.vue",
		"/Users/stoo/Dev/smilodon/components/TagView.vue",
		"/Users/stoo/Dev/smilodon/components/IconButton.vue",
		"/Users/stoo/Dev/smilodon/components/MainNav.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/create.vue",
		"/Users/stoo/Dev/smilodon/components/table/FilteredTable.vue",
		"/Users/stoo/Dev/smilodon/components/projects/ProjectEditor.vue",
		"/Users/stoo/Dev/smilodon/components/entities/PropertyEditor.vue",
		"/Users/stoo/Dev/smilodon/components/entities/EntityTable.vue",
		"/Users/stoo/Dev/smilodon/components/daisyui/tab-panel.vue",
		"/Users/stoo/Dev/smilodon/components/categories/CategoryEditor.vue",
		"/Users/stoo/Dev/smilodon/components/ConfirmDialogue.vue",
		"/Users/stoo/Dev/smilodon/.nuxt/components/index.js",
		"/Users/stoo/Dev/smilodon/pages/projects/index.vue",
		"/Users/stoo/Dev/smilodon/components/daisyui/button.vue",
		"/Users/stoo/Dev/smilodon/components/daisyui/tab-group.vue",
		"/Users/stoo/Dev/smilodon/components/popup-button.vue",
		"/Users/stoo/Dev/smilodon/components/TagList.vue",
		"/Users/stoo/Dev/smilodon/components/table/LinkColumn.vue",
		"/Users/stoo/Dev/smilodon/components/table/BaseColumn.vue",
		"/Users/stoo/Dev/smilodon/utils/config.js",
		"/Users/stoo/Library/Application Support/Sublime Text 3/Packages/User/component.sublime-snippet",
		"/Users/stoo/Dev/smilodon/static/seed/projects.json",
		"/Users/stoo/Dev/smilodon/components/ModalView.vue",
		"/Users/stoo/Library/Application Support/Sublime Text 3/Packages/User/component",
		"/Users/stoo/Dev/smilodon/mixins/with-projects.js",
		"/Users/stoo/Dev/smilodon/components/HtmlEditor.vue",
		"/Users/stoo/Dev/smilodon/pages/projects/_projectId/entities/index.vue",
		"/Users/stoo/Dev/smilodon/mixins/with-entities.js",
		"/Users/stoo/Dev/smilodon/pages/categories/_categoryId/index.vue",
		"/Users/stoo/Dev/smilodon/pages/entities/_entityId/edit.vue",
		"/Users/stoo/Dev/smilodon/pages/entities/_entityId/index.vue",
		"/Users/stoo/Dev/smilodon/README.md",
		"/Users/stoo/Dev/smilodon/plugins/editor.js",
		"/Users/stoo/Dev/smilodon/components/SelectInput.vue",
		"/Users/stoo/Dev/smilodon/components/entities/EntityMap.vue",
		"/Users/stoo/Dev/smilodon/mixins/with-entity.js",
		"/Users/stoo/Dev/smilodon/pages/categories/index.vue",
		"/Users/stoo/Dev/smilodon/pages/entities/index.vue",
		"/Users/stoo/Dev/smilodon/plugins/mindmap.js",
		"/Users/stoo/Dev/smilodon/mixins/with-category.js",
		"/Users/stoo/Dev/smilodon/components/SlideDown.vue",
		"/Users/stoo/Dev/smilodon/node_modules/unplugin/node_modules/webpack-sources/lib/helpers/readMappings.js",
		"/Users/stoo/Dev/smilodon/components/EntityTable.vue",
		"/Users/stoo/Dev/smilodon/components/EntityOverlay.vue",
		"/Users/stoo/Dev/smilodon/components/EntityEditor.vue",
		"/Users/stoo/Dev/smilodon/pages/_entityId/index.vue",
		"/Users/stoo/Dev/smilodon/pages/entities/_entityId.vue",
		"/Users/stoo/Dev/smilodon/components/EntityIcon.vue",
		"/Users/stoo/Dev/smilodon/node_modules/wrap-ansi/index.js",
		"/Users/stoo/Dev/smilodon/node_modules/wrap-ansi/package.json",
		"/Users/stoo/Dev/smilodon/node_modules/string-width/index.js",
		"/Users/stoo/Dev/smilodon/components/IconView.vue",
		"/Users/stoo/Dev/smilodon/example.env",
		"/Users/stoo/Dev/smilodon/.env",
		"/Users/stoo/Dev/smilodon/.editorconfig"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 133.0,
		"where_history":
		[
			"/Users/stoo/Dev/smilodon,<project filters>,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"console.lo",
			"console",
			", ",
			".id.",
			", ",
			".parent",
			"parent",
			"<title>",
			"sm",
			"expandAll",
			"px-2 py-1",
			" ",
			"createState",
			"marks",
			"console",
			"CONTENT",
			"totitlecase",
			"eventbus",
			"eventbys",
			" class=\"mb-0 mt-0\"",
			"this.command",
			"toggleMark(schema.marks.",
			"_1",
			"editor",
			"\">",
			"paragraph",
			"click=\"",
			"<command-action",
			"this.state",
			"schema",
			"view",
			"toggleMark",
			"editor.chain().focus().",
			"class=\"join-item\"",
			"view",
			"html",
			"\t\t\t\t\t\t:view=\"view\"",
			"html",
			"newValue",
			"\"",
			"wrapInList",
			"text",
			"   ",
			" as HTMLElement",
			"  ",
			"wrapIn",
			"setBlockType",
			")\"",
			":command=\"",
			":mark",
			"toggle",
			"<command-toggle",
			"toggle-mark",
			":icon=\"",
			"schem",
			"scheme",
			"\n\t\t\t",
			"<html-edi",
			"outline",
			"focus",
			"\"",
			"with-entity",
			"getIcon",
			"sortByProperty",
			"<tag-list",
			"sortbyprop",
			"  ",
			"state",
			"\"",
			"prosemirror-state",
			"state",
			"marked",
			"prose",
			"we-ui",
			"CATEGORIES_UPDATED",
			"eventbus",
			"log",
			"recursiveLoad",
			"sort",
			"allWithParent",
			"entity",
			"<d-card-title",
			"<d-card ",
			"<d-card",
			"<icon-b",
			"card-actions",
			"card-title",
			"justify-self",
			"self-end",
			"<icon-button",
			"bg-",
			"<icon-button",
			"<d-icon",
			"d-icon",
			"d-loading",
			"class=\"",
			"'#CA8814'",
			"'#FFF8A4'",
			"'#6EA131'",
			"'#D1E9B5'",
			"'#065E6D'",
			"'#ACD6E0'",
			"'#424242'",
			"WHITE.DEFAULT",
			"'#D6D6D6'",
			"'#EAEAEB'",
			"'#F9BDB2',",
			"#F9BDB2",
			"'#D02C0F',",
			"D02C0F",
			"medium",
			"Colour",
			"white",
			"mid",
			", ",
			"'#88C540'",
			"'#EAA326'",
			"'#EF4223'",
			"'#08889E',",
			"'#08889E'",
			"'#3D3D3D',",
			"'#C2C4C6'",
			"taglist",
			"<d-icon",
			"d-button",
			"py-4",
			"error",
			"warning"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"'",
			"\\t"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "state/entity.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1494,
						"regions":
						{
						},
						"selection":
						[
							[
								1315,
								1315
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 554.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pages/projects/_projectId/entities/_entityId/index.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2796,
						"regions":
						{
						},
						"selection":
						[
							[
								845,
								845
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 292.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5028,
						"regions":
						{
						},
						"selection":
						[
							[
								510,
								510
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 43.0
	},
	"input":
	{
		"height": 47.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 267.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/npm.sublime-build",
	"project": "Smilodon.sublime-project",
	"replace":
	{
		"height": 90.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"icon vi",
				"components/icon-view.vue"
			],
			[
				"main-",
				"components/main-nav.vue"
			],
			[
				"pack",
				"package.json"
			],
			[
				"packa",
				"package.json"
			],
			[
				"pac",
				"package.json"
			],
			[
				"with-em",
				"node_modules/@npmcli/fs/lib/with-temp-dir.js"
			],
			[
				"tag-li",
				"components/tag-list.vue"
			],
			[
				"confir",
				"components/confirm-dialogue.vue"
			],
			[
				"icons",
				"utils/icons.js"
			],
			[
				"tailw",
				"tailwind.config.js"
			],
			[
				"tailwin",
				"tailwind.config.js"
			],
			[
				"confi",
				"utils/config.js"
			],
			[
				"read",
				"README.md"
			],
			[
				"readm",
				"node_modules/unplugin/node_modules/webpack-sources/lib/helpers/readMappings.js"
			],
			[
				"sty",
				"assets/styles.css"
			],
			[
				"config",
				"utils/config.js"
			],
			[
				"icon",
				"utils/icons.js"
			],
			[
				"wrap-ansi",
				"node_modules/wrap-ansi/index.js"
			],
			[
				"string-width ind",
				"node_modules/string-width/index.js"
			],
			[
				"nuxt",
				"aegean-app/nuxt.config.js"
			],
			[
				"utils",
				"aegean-app/.nuxt/utils.js"
			],
			[
				".env",
				"aegean-app/.env"
			],
			[
				"meta",
				"aegean-app/utils/meta.js"
			],
			[
				"footer",
				"components/FooterSection.vue"
			],
			[
				"info",
				"components/buttons/InfoButton.vue"
			],
			[
				"adversaryv",
				"components/system/AdversaryView.vue"
			],
			[
				"withc",
				"mixins/WithCharacter.js"
			],
			[
				"crea",
				"utils/character/creator.js"
			],
			[
				"radioac",
				"components/buttons/RadioAction.vue"
			],
			[
				"career",
				"pages/characters/_characterId/careers.vue"
			],
			[
				"charac",
				"components/system/CharacterProgress.vue"
			],
			[
				"foo",
				"components/FooterSection.vue"
			],
			[
				"charac creator",
				"utils/character/creator.js"
			],
			[
				"charac cre",
				"node_modules/micromark/dist/tokenize/character-reference.js"
			],
			[
				"character/cre",
				"utils/character/creator.js"
			],
			[
				"equip",
				"pages/characters/_characterId/equipment.vue"
			],
			[
				"data.js",
				"state/data.js"
			],
			[
				"accordion",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"equipe",
				"static/data/equipment.json"
			],
			[
				"infobu",
				"components/buttons/InfoButton.vue"
			],
			[
				"defini",
				"components/DefinitionTerm.vue"
			],
			[
				"cardview",
				"components/CardView.vue"
			],
			[
				"defin",
				"components/DefinitionTerm.vue"
			],
			[
				"skills",
				"pages/characters/_characterId/skills.vue"
			],
			[
				"styl",
				"assets/styles.css"
			],
			[
				"advers",
				"components/system/AdversaryView.vue"
			],
			[
				"style",
				"assets/styles.css"
			],
			[
				"s",
				"assets/styles.css"
			],
			[
				"adversary",
				"components/system/AdversaryView.vue"
			],
			[
				"jest",
				"jest.config.js"
			],
			[
				"config.",
				"utils/config.js"
			],
			[
				"defi",
				"components/DefinitionTerm.vue"
			],
			[
				"list",
				"components/ListFilter.vue"
			],
			[
				"talent",
				"static/data/talents.json"
			],
			[
				"statview",
				"components/system/StatView.vue"
			],
			[
				"markd",
				"components/MarkdownContent.vue"
			],
			[
				"listfil",
				"components/ListFilter.vue"
			],
			[
				"all.json",
				"static/data/adversaries/all.json"
			],
			[
				"all.",
				"node_modules/async/all.js"
			],
			[
				"markdown",
				"components/MarkdownContent.vue"
			],
			[
				"card",
				"components/CardView.vue"
			],
			[
				"tagvi",
				"components/TagView.vue"
			],
			[
				"nuxt.",
				"nuxt.config.js"
			],
			[
				"acco",
				"components/accordion/AccordionItem.vue"
			],
			[
				"background",
				"components/system/BackgroundView.vue"
			],
			[
				"acc",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"accor",
				"components/accordion/AccordionItem.vue"
			],
			[
				"filter",
				"plugins/filters.js"
			],
			[
				"iconvie",
				"components/IconView.vue"
			],
			[
				".card",
				"node_modules/.cache/babel-loader/d0cc8339acede1b5436da6f2e5eee818.json.gz"
			],
			[
				"accord",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"inde",
				"pages/index.vue"
			],
			[
				"accordio",
				"components/accordion/AccordionItem.vue"
			],
			[
				"tabgro",
				"components/tabs/TabGroup.vue"
			],
			[
				"divini",
				"components/system/DivinityView.vue"
			],
			[
				"check",
				"components/forms/CheckBox.vue"
			],
			[
				"iconvi",
				"components/IconView.vue"
			],
			[
				"RADIO",
				"components/forms/RadioGroup.vue"
			],
			[
				"backgr ",
				"components/system/BackgroundView.vue"
			],
			[
				"divine",
				"components/system/DivinityView.vue"
			],
			[
				"divin",
				"static/data/chargen/divinities.json"
			],
			[
				"data",
				"state/data.js"
			],
			[
				"conf",
				"utils/config.js"
			],
			[
				"radio",
				"components/forms/RadioGroup.vue"
			],
			[
				"mainn",
				"components/nav/MainNav.vue"
			],
			[
				"state/ima",
				"state/image.js"
			],
			[
				"chara",
				"components/system/CharacterProgress.vue"
			],
			[
				"divinit",
				"static/data/chargen/divinities.json"
			],
			[
				"herit",
				"static/data/chargen/heritage.json"
			],
			[
				"linkac",
				"components/buttons/LinkAction.vue"
			],
			[
				"string",
				"utils/string.js"
			],
			[
				"tonic",
				"node_modules/pouchdb/tonic-example.js"
			],
			[
				"firebase",
				"plugins/firebase.js"
			],
			[
				"background.js",
				"static/data/chargen/background.json"
			],
			[
				"renderma",
				"components/RenderMarkdown.vue"
			],
			[
				"compon progr",
				"components/system/CharacterProgress.vue"
			],
			[
				"progr",
				"node_modules/webpack/lib/ProgressPlugin.js"
			],
			[
				"chargen",
				"state/chargen.js"
			],
			[
				"adversaryvi",
				"components/system/AdversaryView.vue"
			],
			[
				"step",
				"components/buttons/StepButtons.vue"
			],
			[
				"adversar",
				"components/system/AdversaryView.vue"
			],
			[
				"STAT",
				"components/system/StatBlock.vue"
			],
			[
				"stat",
				"components/system/StatBlock.vue"
			],
			[
				"adver",
				"components/system/AdversaryView.vue"
			],
			[
				"textinp",
				"components/forms/TextInput.vue"
			],
			[
				"textin",
				"components/forms/TextInput.vue"
			],
			[
				"listfilter",
				"components/forms/ListFilter.vue"
			],
			[
				"statblo",
				"components/system/StatBlock.vue"
			],
			[
				"character",
				"state/character.js"
			],
			[
				"heritage.js",
				"static/data/chargen/heritage.json"
			],
			[
				"heritage.v",
				"pages/characters/_characterId/heritage.vue"
			],
			[
				"charge",
				"state/chargen.js"
			],
			[
				"assets/st",
				"assets/styles.css"
			],
			[
				"messageview",
				"components/MessageView.vue"
			],
			[
				"xanthi",
				"src/setting/pregens/xanthippe-soldier.md"
			],
			[
				"xiphos",
				"src/setting/equipment/weapons/xiphos.md"
			],
			[
				"makh",
				"src/setting/equipment/weapons/makhaira.md"
			],
			[
				"lore",
				"src/rules/skills/lore.md"
			],
			[
				"autom",
				"src/setting/adversaries/monsters/automaton-spider.md"
			],
			[
				"targets",
				"build/targets.json"
			],
			[
				"boar.md",
				"src/setting/equipment/livestock/boar.md"
			],
			[
				"blurb",
				"src/quickstart/blurb.md"
			],
			[
				"targe",
				"build/targets.json"
			],
			[
				"club",
				"src/setting/equipment/weapons/club.md"
			],
			[
				"xipho",
				"src/setting/equipment/weapons/xiphos.md"
			],
			[
				"targ",
				"build/targets.json"
			],
			[
				"resolve",
				"src/rules/attributes/resolve.md"
			],
			[
				"stun",
				"src/rules/properties/stun.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 333.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 600.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 278.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
