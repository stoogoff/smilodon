{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"po",
				"propertyLinks"
			],
			[
				"proper",
				"propertyLinks"
			],
			[
				"propert",
				"propertyLinks"
			],
			[
				"R",
				"RADIUS"
			],
			[
				"crate",
				"createNode"
			],
			[
				"cre",
				"createPrimary"
			],
			[
				"CEN",
				"CENTRE_Y"
			],
			[
				"grid-",
				"grid-cols-2"
			],
			[
				"sear",
				"searchTerm"
			],
			[
				"allB",
				"allByProject"
			],
			[
				"edit",
				"editingData"
			],
			[
				"Rest",
				"RestoreEmpty"
			],
			[
				"REstor",
				"RestoreExisting"
			],
			[
				"Res",
				"RestoreNew"
			],
			[
				"cate",
				"categoryIdMap"
			],
			[
				"exi",
				"existingCategories"
			],
			[
				"eleme",
				"elementIdObjectMap"
			],
			[
				"existin",
				"existingElements"
			],
			[
				"file",
				"fileExtension"
			],
			[
				"cat",
				"categories"
			],
			[
				"ele",
				"elementIdObjectMap"
			],
			[
				"proejct",
				"projectId"
			],
			[
				"a",
				"allByProject"
			],
			[
				"not",
				"notEmptyString"
			],
			[
				"no",
				"notEmptyString"
			],
			[
				"s",
				"SHOW_MESSAGE"
			],
			[
				"isE",
				"isEmptyString"
			],
			[
				"sid",
				"sidebarOpen"
			],
			[
				"to",
				"toggleOpen"
			],
			[
				"se",
				"selectedNode"
			],
			[
				"LIST",
				"LIST_ORDERED"
			],
			[
				"isB",
				"isBulletList"
			],
			[
				"show",
				"showCategories"
			],
			[
				"DEf",
				"DEFAULT_ENTITY_ID"
			],
			[
				"clearI",
				"clearInterval"
			],
			[
				"set",
				"setInterval"
			],
			[
				"T",
				"TreeManager"
			],
			[
				"TRee",
				"TREE_STATE_PROJECT"
			],
			[
				"pro",
				"projectId"
			],
			[
				"C",
				"CATEGORY_ID_PREFIX"
			],
			[
				"paret",
				"parentId"
			],
			[
				"cer",
				"createState"
			],
			[
				"default",
				"defaultMarkdownParser"
			],
			[
				"en",
				"entityId"
			],
			[
				"mut",
				"mutableColumns"
			],
			[
				"create",
				"createMutableColumns"
			],
			[
				"sort",
				"sortedEntities"
			],
			[
				"prop",
				"properties"
			],
			[
				"With",
				"WithProjects"
			],
			[
				"proj",
				"projectData"
			],
			[
				"fet",
				"fetchOnServer"
			],
			[
				"by",
				"allByProject"
			],
			[
				"MEnu",
				"MENU_ITEMS"
			],
			[
				"c",
				"category"
			],
			[
				"PR",
				"PROPERTY_TYPES"
			],
			[
				"categ",
				"category"
			],
			[
				"ca",
				"categories"
			],
			[
				"CAT",
				"categoryTitle"
			],
			[
				"cons",
				"constructor"
			],
			[
				"grid-template",
				"grid-template-columns"
			],
			[
				"charac",
				"characteristics"
			],
			[
				"sk",
				"skillIncreases"
			],
			[
				"add",
				"addAdvantage"
			],
			[
				"remove",
				"removeBackground"
			],
			[
				"ChAt",
				"ChAtMax"
			],
			[
				"CHARC",
				"CHARACTERISTIC_MAX"
			],
			[
				"grid",
				"grid-cols-2"
			],
			[
				"charact",
				"characteristics"
			],
			[
				"chara",
				"characteristics"
			],
			[
				"has",
				"hasDivineHeritage"
			],
			[
				"cha",
				"characteristics"
			],
			[
				"SELEC",
				"SELECTED_BY_OTHER"
			],
			[
				"SELE",
				"SELECTED_BY_OTHER"
			],
			[
				"char",
				"characteristics"
			],
			[
				"characte",
				"characteristics"
			],
			[
				"character",
				"characteristics"
			],
			[
				"CHA",
				"CHARACTERISTIC_MAX"
			],
			[
				"CHAR",
				"CHARACTERISTICS"
			],
			[
				"HER",
				"HERITAGE_MORTAL"
			],
			[
				"HERI",
				"HERITAGE_MORTAL"
			],
			[
				"acco",
				"accordion-item"
			],
			[
				"chevron",
				"chevron-down"
			],
			[
				"paren",
				"parentSelection"
			],
			[
				"heri",
				"heritages"
			],
			[
				"divini",
				"divinities"
			],
			[
				"re",
				"registerHelper\twarning"
			],
			[
				"font-s",
				"font-size\tproperty"
			],
			[
				"text",
				"text-transform\tproperty"
			],
			[
				"min-",
				"min-height"
			],
			[
				"text-",
				"text-transform"
			],
			[
				"font-",
				"font-size"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"backgorun",
				"background-color"
			],
			[
				"bacg",
				"background-color"
			],
			[
				"column",
				"column-count"
			],
			[
				"colle",
				"collections"
			],
			[
				"backgou",
				"background-color"
			],
			[
				"tetx",
				"text-center"
			],
			[
				"di",
				"display"
			],
			[
				"background",
				"background-color"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"font",
				"font-family"
			],
			[
				"meta",
				"metadata"
			],
			[
				"inli",
				"inline-block"
			],
			[
				"padding",
				"padding-left"
			],
			[
				"bakc",
				"background-color"
			],
			[
				"backgoru",
				"background-color"
			],
			[
				"box",
				"box-medium"
			],
			[
				"page",
				"page-break-after"
			],
			[
				"marign-",
				"margin-top"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1530,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\nStrap line\nLarge but short intro text\nImage\n\nFeature overview\n\nInspiring blurb\n\nSome feature details\n\nWorks offline\nStores data locally\nSave backup\nMultiple projects\nMultiple ways to connect your data\n\nzonu.la\nexemp.la\ncopu.la - means a connecting word but not available",
			"settings":
			{
				"buffer_size": 272,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\n\nIntro"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " text"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "Strap"
					},
					"BgAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAoAAABJbnRybyB0ZXh0AwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " line"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\nBig"
					},
					"BAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " intro"
					},
					"BgAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "Large"
					},
					"BgAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOAAAAAAAAAAMAAABCaWcOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " but"
					},
					"BAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " short"
					},
					"BgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAABwAAAAAAAAAHAAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAA////////738"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\nImage"
					},
					"BgAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "Some"
					},
					"BAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " features"
					},
					"CQAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAYAAABTb21lIGY",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAAC8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAADYAAAAAAAAANgAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " over"
					},
					"BQAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " view"
					},
					"BQAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAADsAAAAAAAAAOwAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "Inspirig"
					},
					"CAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAAEgAAAAAAAAASAAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "ng"
					},
					"AgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " blurb"
					},
					"BgAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAEoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n\nFeature"
					},
					"CQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " details"
					},
					"CAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAABbAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABeAAAAAAAAAAAAAABeAAAAAAAAAF8AAAAAAAAAAAAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZAAAAAAAAAFkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "Some"
					},
					"BQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABTAAAAAAAAAAEAAABGUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "\n\nWors"
					},
					"BgAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAAAAAAAAAGYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAGsAAAAAAAAAawAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "ks"
					},
					"AgAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAAAAAAAAAGsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " off"
					},
					"BAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					2,
					"left_delete",
					null,
					"AgAAAHIAAAAAAAAAcgAAAAAAAAABAAAAbHEAAAAAAAAAcQAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAAAAAAAAAHMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\nStores"
					},
					"BwAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AAAAAAAAAHUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AAAAAAAAAHwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " locally"
					},
					"CAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "Save"
					},
					"BAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAAAAAAAAAIoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " backup"
					},
					"BwAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\nMultiplee"
					},
					"CgAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAAAAAAAAAJUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAAAAAAAAAJ8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					3,
					"left_delete",
					null,
					"AwAAAKAAAAAAAAAAoAAAAAAAAAABAAAAcJ8AAAAAAAAAnwAAAAAAAAABAAAAIJ4AAAAAAAAAngAAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " projects"
					},
					"CQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\nMultiple"
					},
					"CQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " ways"
					},
					"BQAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AAAAAAAAALUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " connect"
					},
					"CAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " your"
					},
					"BQAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\nzon."
					},
					"BgAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					2,
					"left_delete",
					null,
					"AgAAAM8AAAAAAAAAzwAAAAAAAAABAAAALs4AAAAAAAAAzgAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "u.la"
					},
					"BAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAM4AAAAAAAAAzwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\ne"
					},
					"AgAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAP///////+9/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "xemp.la"
					},
					"BwAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "copu.la"
					},
					"BwAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " means"
					},
					"BgAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " connecting"
					},
					"CwAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " word"
					},
					"BQAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " bbut"
					},
					"BQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAAMBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " available"
					},
					"CgAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAP8AAAAAAAAA/wAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/modules/db/element.js",
			"settings":
			{
				"buffer_size": 3021,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 95 files for \"$categories\"\n\n~/Dev/smilodon/src/components/breadcrumb.vue:\n   19  \n   20  \t\tif(notNull(params.categoryId)) {\n   21: \t\t\tthis.ancestors = await this.$categories.ancestors(params.categoryId)\n   22  \t\t}\n   23  \t\telse if(notNull(this.element) && notEmptyString(this.element.category)) {\n   24: \t\t\tthis.ancestors = await this.$categories.ancestors(this.element.category)\n   25  \t\t}\n   26  \t},\n\n~/Dev/smilodon/src/components/categories/category-editor.vue:\n   47  \tasync fetch() {\n   48  \t\tconst { params } = this.$nuxt.context\n   49: \t\tconst categories = await this.$categories.allByProject(params.projectId)\n   50  \n   51  \t\tthis.categories = categories.sort(sortByProperty('title'))\n   52  \n   53  \t\tif(this.parentId) {\n   54: \t\t\tthis.actualParent = await this.$categories.byId(this.parentId)\n   55  \t\t}\n   56  \t},\n   ..\n   92  \n   93  \t\t\tif(this.category) {\n   94: \t\t\t\tnewCategory = await this.$categories.save({\n   95  \t\t\t\t\t...this.category,\n   96  \t\t\t\t\ttitle: this.title,\n   ..\n  100  \t\t\t}\n  101  \t\t\telse {\n  102: \t\t\t\tnewCategory = await this.$categories.create({\n  103  \t\t\t\t\ttitle: this.title,\n  104  \t\t\t\t\tparent: this.actualParent ? this.actualParent._id : '',\n\n~/Dev/smilodon/src/components/categories/category-panel.vue:\n   83  \t\tasync showForm() {\n   84  \t\t\tif(isIn('categoryId', this.$route.params)) {\n   85: \t\t\t\tthis.currentCategory = await this.$categories.byId(this.$route.params.categoryId)\n   86  \t\t\t}\n   87  \t\t\telse if(isIn('elementId', this.$route.params)) {\n   ..\n   89  \n   90  \t\t\t\tif(element) {\n   91: \t\t\t\t\tthis.currentCategory = await this.$categories.byId(element.category)\n   92  \t\t\t\t}\n   93  \t\t\t}\n\n~/Dev/smilodon/src/components/elements/element-editor.vue:\n   98  \t\tthis.categories = [\n   99  \t\t\t{ _id: '', title: '(none)' },\n  100: \t\t\t...(await this.$categories.allByProject(params.projectId)),\n  101  \t\t]\n  102  \n  ...\n  178  \n  179  \t\tasync setStateFromElement(element) {\n  180: \t\t\tconst category = element.category ? await this.$categories.byId(element.category) : null\n  181  \n  182  \t\t\tthis.title = element.title || ''\n\n~/Dev/smilodon/src/components/elements/element-table.vue:\n   17  \n   18  \tasync fetch() {\n   19: \t\tconst categories = await this.$categories.all()\n   20  \t\tconst idMap = {}\n   21  \t\tlet columns = []\n\n~/Dev/smilodon/src/pages/projects/_projectId/index.vue:\n   97  \n   98  \t\tasync handleDelete() {\n   99: \t\t\tconst categories = await this.$categories.allByProject(this.project._id)\n  100  \t\t\tconst elements = await this.$elements.allByProject(this.project._id)\n  101  \t\t\tconst allToDelete = [\n\n~/Dev/smilodon/src/pages/projects/_projectId/categories/_categoryId/edit.vue:\n   19  \t\tconst { params } = this.$nuxt.context\n   20  \n   21: \t\tthis.category = await this.$categories.byId(params.categoryId)\n   22  \t},\n   23  \tfetchOnServer: false,\n\n~/Dev/smilodon/src/pages/projects/_projectId/categories/_categoryId/index.vue:\n   54  \n   55  \t\tthis.elements = await this.$elements.allByCategory(params.categoryId)\n   56: \t\tthis.category = await this.$categories.byId(params.categoryId)\n   57  \t},\n   58  \tfetchOnServer: false,\n   ..\n   76  \t\tasync handleDelete() {\n   77  \t\t\tconst project = await this.$projects.byId(this.category.project)\n   78: \t\t\tconst categories = [ this.category, ...await this.$categories.descendants(this.category) ]\n   79  \t\t\tconst elements = (await Promise.all(categories.map(category =>\n   80  \t\t\t\tthis.$elements.allByCategory(category._id)\n\n~/Dev/smilodon/src/pages/projects/_projectId/elements/_elementId/index.vue:\n  117  \t\tasync handleDelete() {\n  118  \t\t\tconst next = notEmptyString(this.element.category)\n  119: \t\t\t\t? await this.$categories.byId(this.element.category)\n  120  \t\t\t\t: await this.$projects.byId(this.element.project)\n  121  \n\n16 matches across 9 files\n",
			"settings":
			{
				"buffer_size": 3758,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "src/pages/projects/_projectId/elements/_elementId/index.vue",
			"settings":
			{
				"buffer_size": 3553,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"duplicate_line",
					null,
					"AQAAABcIAAAAAAAAQQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wcAAAAAAAD7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "!--"
					},
					"AwAAAPQHAAAAAAAA9QcAAAAAAAAAAAAA9QcAAAAAAAD2BwAAAAAAAAAAAAD2BwAAAAAAAPcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPcHAAAAAAAA+AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wcAAAAAAAD3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " --"
					},
					"AwAAABkIAAAAAAAAGggAAAAAAAAAAAAAGggAAAAAAAAbCAAAAAAAAAAAAAAbCAAAAAAAABwIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQgAAAAAAAAZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "element-map"
					},
					"DAAAACUIAAAAAAAAJggAAAAAAAAAAAAAJggAAAAAAAAmCAAAAAAAAAwAAABuZXR3b3JrLXZpZXcmCAAAAAAAACcIAAAAAAAAAAAAACcIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAApCAAAAAAAAAAAAAApCAAAAAAAACoIAAAAAAAAAAAAACoIAAAAAAAAKwgAAAAAAAAAAAAAKwgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAAC0IAAAAAAAAAAAAAC0IAAAAAAAALggAAAAAAAAAAAAALggAAAAAAAAvCAAAAAAAAAAAAAAvCAAAAAAAADAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQgAAAAAAAAxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " :connections"
					},
					"DQAAAEMIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABFCAAAAAAAAAAAAABFCAAAAAAAAEYIAAAAAAAAAAAAAEYIAAAAAAAARwgAAAAAAAAAAAAARwgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEkIAAAAAAAAAAAAAEkIAAAAAAAASggAAAAAAAAAAAAASggAAAAAAABLCAAAAAAAAAAAAABLCAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAATQgAAAAAAAAAAAAATQgAAAAAAABOCAAAAAAAAAAAAABOCAAAAAAAAE8IAAAAAAAAAAAAAE8IAAAAAAAAUAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwgAAAAAAABDCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFAIAAAAAAAAUQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAgAAAAAAABQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAFEIAAAAAAAAUwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQgAAAAAAABRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "connections"
					},
					"CwAAAFIIAAAAAAAAUwgAAAAAAAAAAAAAUwgAAAAAAABUCAAAAAAAAAAAAABUCAAAAAAAAFUIAAAAAAAAAAAAAFUIAAAAAAAAVggAAAAAAAAAAAAAVggAAAAAAABXCAAAAAAAAAAAAABXCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAWQgAAAAAAAAAAAAAWQgAAAAAAABaCAAAAAAAAAAAAABaCAAAAAAAAFsIAAAAAAAAAAAAAFsIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAABdCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUggAAAAAAABSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "oi"
					},
					"AwAAAFIIAAAAAAAAUwgAAAAAAAAAAAAAUwgAAAAAAABTCAAAAAAAAAsAAABjb25uZWN0aW9uc1MIAAAAAAAAVAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUggAAAAAAABdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					2,
					"left_delete",
					null,
					"AgAAAFMIAAAAAAAAUwgAAAAAAAABAAAAaVIIAAAAAAAAUggAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAVAgAAAAAAABUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "linked"
					},
					"BgAAAFIIAAAAAAAAUwgAAAAAAAAAAAAAUwgAAAAAAABUCAAAAAAAAAAAAABUCAAAAAAAAFUIAAAAAAAAAAAAAFUIAAAAAAAAVggAAAAAAAAAAAAAVggAAAAAAABXCAAAAAAAAAAAAABXCAAAAAAAAFgIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUggAAAAAAABSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "linked"
					},
					"BwAAAEUIAAAAAAAARggAAAAAAAAAAAAARggAAAAAAABGCAAAAAAAAAsAAABjb25uZWN0aW9uc0YIAAAAAAAARwgAAAAAAAAAAAAARwgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEkIAAAAAAAAAAAAAEkIAAAAAAAASggAAAAAAAAAAAAASggAAAAAAABLCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQgAAAAAAABQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n<client-"
					},
					"CgAAAB0IAAAAAAAAHggAAAAAAAAAAAAAHggAAAAAAAAkCAAAAAAAAAAAAAAkCAAAAAAAACUIAAAAAAAAAAAAACUIAAAAAAAAJggAAAAAAAAAAAAAJggAAAAAAAAnCAAAAAAAAAAAAAAnCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAAKQgAAAAAAAAAAAAAKQgAAAAAAAAqCAAAAAAAAAAAAAAqCAAAAAAAACsIAAAAAAAAAAAAACsIAAAAAAAALAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQgAAAAAAAAdCAAAAAAAAP///////+9/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAACwIAAAAAAAALQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAACwIAAAAAAAALAgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAALQgAAAAAAAAtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "only>"
					},
					"BQAAACwIAAAAAAAALQgAAAAAAAAAAAAALQgAAAAAAAAuCAAAAAAAAAAAAAAuCAAAAAAAAC8IAAAAAAAAAAAAAC8IAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAAxCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADIIAAAAAAAAMwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMggAAAAAAAAyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGwIAAAAAAAAbQgAAAAAAAAAAAAAbQgAAAAAAAB0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAgAAAAAAABsCAAAAAAAAP///////+9/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAHMIAAAAAAAAcwgAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAdAgAAAAAAAB0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAHMIAAAAAAAAdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwgAAAAAAABzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"close_tag",
					{
						"insert_slash": true
					},
					"AQAAAHQIAAAAAAAAgQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAgAAAAAAAB0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"BAAAAG0IAAAAAAAAbQgAAAAAAAAUAAAACQkJCQkJPC9jbGllbnQtb25seT4eCAAAAAAAAB4IAAAAAAAAEwAAAAkJCQkJCTxjbGllbnQtb25seT5ZCAAAAAAAAFkIAAAAAAAAAQAAAAodCAAAAAAAAB0IAAAAAAAAAQAAAAo",
					"AQAAAAAAAAACAAAAMQgAAAAAAAAeCAAAAAAAAAAAAAAAAAAAgQgAAAAAAABtCAAAAAAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"left_delete",
					null,
					"AQAAACQIAAAAAAAAJAgAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAJQgAAAAAAAAlCAAAAAAAAAAAAAAAAGVA"
				],
				[
					68,
					2,
					"right_delete",
					null,
					"AgAAAO0HAAAAAAAA7QcAAAAAAAAwAAAACQkJCQkJPCEtLSBuZXR3b3JrLXZpZXcgOmVsZW1lbnQ9ImVsZW1lbnQiIC8gLS0+7QcAAAAAAADtBwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAHQgAAAAAAADtBwAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "src/components/network/connection-filter.vue",
			"settings":
			{
				"buffer_size": 3082,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: html"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/stoo/Dev/smilodon",
		"/Users/stoo/Dev/smilodon/infra",
		"/Users/stoo/Dev/smilodon/src",
		"/Users/stoo/Dev/smilodon/src/components",
		"/Users/stoo/Dev/smilodon/src/components/categories",
		"/Users/stoo/Dev/smilodon/src/components/editor",
		"/Users/stoo/Dev/smilodon/src/components/elements",
		"/Users/stoo/Dev/smilodon/src/components/network",
		"/Users/stoo/Dev/smilodon/src/components/projects",
		"/Users/stoo/Dev/smilodon/src/components/table",
		"/Users/stoo/Dev/smilodon/src/modules",
		"/Users/stoo/Dev/smilodon/src/modules/db",
		"/Users/stoo/Dev/smilodon/src/pages",
		"/Users/stoo/Dev/smilodon/src/pages/projects",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/categories",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/categories/_categoryId",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/elements",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/elements/_elementId",
		"/Users/stoo/Dev/smilodon/src/plugins",
		"/Users/stoo/Dev/smilodon/src/static",
		"/Users/stoo/Dev/smilodon/src/static/seed",
		"/Users/stoo/Dev/smilodon/src/utils"
	],
	"file_history":
	[
		"/Users/stoo/Dev/smilodon/src/components/elements/element-map.vue",
		"/Users/stoo/Dev/smilodon/src/package.json",
		"/Users/stoo/Dev/smilodon/src/plugins/konva.js",
		"/Users/stoo/Dev/smilodon/src/components/breadcrumb.vue",
		"/Users/stoo/Dev/smilodon/src/nuxt.config.js",
		"/Users/stoo/Dev/smilodon/src/static/seed/categories.json",
		"/Users/stoo/Dev/smilodon/src/components/app-nav.vue",
		"/Users/stoo/Dev/smilodon/src/utils/meta.js",
		"/Users/stoo/Dev/smilodon/infra/rules.tf",
		"/Users/stoo/Dev/smilodon/website/robots.txt",
		"/Users/stoo/Dev/smilodon/website/index.html",
		"/Users/stoo/Dev/smilodon/infra/dns.tf",
		"/Users/stoo/Dev/smilodon/infra/main.tf",
		"/Users/stoo/Dev/smilodon/.gitignore",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-map-bak.vue",
		"/Users/stoo/Dev/smilodon/src/components/popup-button.vue",
		"/Users/stoo/Dev/smilodon/src/components/markdown.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/property-editor.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/edit.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/index.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/elements/_elementId/index.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-table.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-editor.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/property-view.vue",
		"/Users/stoo/Dev/smilodon/src/utils/date.js",
		"/Users/stoo/Dev/smilodon/src/utils/config.js",
		"/Users/stoo/Dev/smilodon/src/plugins/filters.js",
		"/Users/stoo/Dev/smilodon/src/modules/db/access.js",
		"/Users/stoo/Dev/smilodon/src/components/categories/category-panel.vue",
		"/Users/stoo/Dev/smilodon/src/components/editor/link-button.vue",
		"/Users/stoo/Dev/smilodon/src/components/sidebar.vue",
		"/Users/stoo/Dev/smilodon/src/modules/theme.js",
		"/Users/stoo/Dev/smilodon/src/pages/projects/index.vue",
		"/Users/stoo/Dev/smilodon/src/components/network/network-view.vue",
		"/Users/stoo/Dev/smilodon/src/plugins/paper.js",
		"/Users/stoo/Dev/smilodon/src/components/network/canvas-view.vue",
		"/Users/stoo/Dev/smilodon/README.md",
		"/Users/stoo/Dev/smilodon/src/components/network/rectangle.vue",
		"/Users/stoo/Dev/smilodon/src/components/network/line.vue",
		"/Users/stoo/Dev/smilodon/src/components/network/text.vue",
		"/Users/stoo/Dev/smilodon/src/components/network/rectangle.js",
		"/Users/stoo/Dev/csharp/Program.cs",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/categories/_categoryId/index.vue",
		"/Users/stoo/Dev/smilodon/src/components/network/connection-filter.vue",
		"/Users/stoo/Dev/smilodon/src/pages/index.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/elements/_elementId/edit.vue",
		"/Users/stoo/Dev/smilodon/src/layouts/default.vue",
		"/Users/stoo/Dev/smilodon/src/components/categories/category-editor.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-overlay.vue",
		"/Users/stoo/Dev/smilodon/src/components/projects/project-editor.vue",
		"/Users/stoo/Dev/smilodon/src/utils/icons.js",
		"/Users/stoo/Dev/smilodon/src/components/editor/editor.vue",
		"/Users/stoo/Dev/smilodon/src/utils/string.js",
		"/Users/stoo/Dev/smilodon/src/modules/db/element.js",
		"/Users/stoo/Dev/smilodon/src/components/editor/config.js",
		"/Users/stoo/Dev/smilodon/src/components/confirm-dialogue.vue",
		"/Users/stoo/Dev/smilodon/src/components/editor/command-button.vue",
		"/Users/stoo/Dev/smilodon/src/components/editor/markdown-editor.js",
		"/Users/stoo/Dev/smilodon/src/assets/styles.css",
		"/Users/stoo/Dev/smilodon/src/components/editor/block-list.vue",
		"/Users/stoo/Dev/smilodon/src/components/editor/schema.js",
		"/Users/stoo/Dev/smilodon/src/utils/file.js",
		"/Users/stoo/Dev/smilodon/tests/unit/utils/file.test.js",
		"/Users/stoo/Dev/smilodon/src/modules/db/category.js",
		"/Users/stoo/Dev/smilodon/src/modules/db/project.js",
		"/Users/stoo/Dev/smilodon/src/plugins/client.js",
		"/Users/stoo/Dev/smilodon/src/modules/restore/restore-new.js",
		"/Users/stoo/Dev/smilodon/src/modules/restore/restore-existing.js",
		"/Users/stoo/Dev/smilodon/src/modules/restore/restore-empty.js",
		"/Users/stoo/Dev/smilodon/src/modules/tree.js",
		"/Users/stoo/Dev/smilodon/src/modules/backup.js",
		"/Users/stoo/Dev/smilodon/src/modules/archive.js",
		"/Users/stoo/Dev/smilodon/src/state/category.js",
		"/Users/stoo/Dev/smilodon/tests/unit/utils/icons.tests.js",
		"/Users/stoo/Dev/smilodon/tests/package.json",
		"/Users/stoo/Dev/smilodon/tests/unit/modules/diff.test.js",
		"/Users/stoo/Dev/smilodon/src/utils/assert.js",
		"/Users/stoo/Dev/smilodon/tests/unit/utils/assert.test.js",
		"/Users/stoo/Dev/smilodon/tests/babel.config.js",
		"/Users/stoo/Dev/smilodon/tests/jest.config.js",
		"/Users/stoo/Dev/smilodon/src/__mocks__/YAML.js",
		"/Users/stoo/Dev/smilodon/tests/__mocks__/YAML.js",
		"/Users/stoo/Dev/smilodon/src/components/categories/category-item.vue",
		"/Users/stoo/Dev/smilodon/src/components/categories/category-tree.vue",
		"/Users/stoo/Dev/smilodon/src/components/table/filtered-table.vue",
		"/Users/stoo/Dev/smilodon/src/layouts/no-action.vue",
		"/Users/stoo/Dev/smilodon/src/layouts/no-project.vue",
		"/Users/stoo/Dev/smilodon/src/mixins/with-store.js",
		"/Users/stoo/Dev/smilodon/src/state/element.js",
		"/Users/stoo/Dev/smilodon/src/managers/diff.js",
		"/Users/stoo/Dev/smilodon/src/managers/backup.js",
		"/Users/stoo/Dev/smilodon/src/managers/restore/restore-empty.js",
		"/Users/stoo/Dev/smilodon/src/managers/restore/restore-new.js",
		"/Users/stoo/Dev/smilodon/src/managers/restore/restore-existing.js",
		"/Users/stoo/Dev/smilodon/src/managers/archive.js",
		"/Users/stoo/Dev/smilodon/src/utils/access.js",
		"/Users/stoo/Dev/smilodon/data/The Kastolar Sector/project.md",
		"/Users/stoo/Dev/smilodon/src/managers/table.js",
		"/Users/stoo/Dev/smilodon/src/components/sidebar-item.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/create.vue",
		"/Users/stoo/Dev/smilodon/src/layouts/site.vue",
		"/Users/stoo/Dev/smilodon/src/components/icon-view.vue",
		"/Users/stoo/Dev/smilodon/src/layouts/test.vue",
		"/Users/stoo/Dev/smilodon/src/pages/example.vue",
		"/Users/stoo/Dev/smilodon/src/managers/tree.js",
		"/Users/stoo/Dev/smilodon/src/components/elements/entity-table.vue",
		"/Users/stoo/Dev/smilodon/src/managers/theme.js",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-item.vue",
		"/Users/stoo/Dev/smilodon/src/components/tags/tag-editor.vue",
		"/Users/stoo/Dev/smilodon/src/components/main-nav.vue",
		"/Users/stoo/Dev/smilodon/src/pages/projects/_projectId/elements/index.vue",
		"/Users/stoo/Dev/smilodon/src/components/elements/element-icon.vue",
		"/Users/stoo/Dev/smilodon/src/static/seed/entities.json",
		"/Users/stoo/Dev/smilodon/src/mixins/with-entities.js",
		"/Users/stoo/Dev/smilodon/src/mixins/with-entity.js",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-table.vue",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-overlay.vue",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-map.vue",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-item.vue",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-editor.vue",
		"/Users/stoo/Dev/smilodon/src/components/entities/entity-icon.vue",
		"/Users/stoo/Dev/smilodon/utils/assert.js",
		"/Users/stoo/Dev/smilodon/components/main-nav.vue",
		"/Users/stoo/Dev/smilodon/components/popup-button.vue",
		"/Users/stoo/Dev/smilodon/components/categories/category-item.vue",
		"/Users/stoo/Dev/smilodon/components/entities/entity-item.vue",
		"/Users/stoo/Dev/smilodon/components/editor/editor.vue",
		"/Users/stoo/Dev/smilodon/components/editor/block-list.vue"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 133.0,
		"where_history":
		[
			"/Users/stoo/Dev/smilodon,<project filters>,*.vue,*.js,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>,*.js,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>,*.vue,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>,-node_modules",
			"/Users/stoo/Dev/smilodon,<project filters>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"matchingProperties",
			"link",
			"shape: 'none'",
			"nodes",
			"linkedRect",
			"element",
			"connection",
			"pos",
			"node",
			"$categories",
			"any",
			"www",
			"h3",
			"\">",
			"layers",
			"return layers",
			"node",
			"stage.width",
			"CENTRE_X",
			"client-only",
			"$refs",
			"ref",
			"category",
			"editor",
			"MENU_ITEMS",
			"$paper",
			"WITH-ELEMENT",
			"befored",
			"suppressClose",
			"suppress",
			"geticon",
			"icons",
			"<dl",
			"main",
			"paper",
			"x",
			"1",
			"x",
			"oldBox",
			"linked",
			"rect-view",
			"width",
			"y",
			"x",
			"percentWidthToPix",
			"newBox.",
			"my-canvas",
			";",
			"this.$refs['my-canvas']",
			"console",
			"cancel",
			"sm",
			"<d-button",
			"cancel",
			"span",
			"ised",
			"modal",
			"daisy",
			"weevo",
			"isEditing",
			"suppressClose",
			"href",
			"editingData",
			"this.searchTerm",
			"url",
			"route",
			"ref",
			"  ",
			".links",
			"linksearch",
			"slug",
			"$refs",
			"sm />",
			"left",
			"box",
			"nodeStart",
			"$el",
			"start",
			"$el",
			"ref",
			"view.",
			"start",
			"anchor",
			"confirm-dialogue",
			"position",
			"Transaction",
			"Transform",
			"editingPosition",
			"this.selectedNode",
			"node",
			"isinset",
			"view",
			"anchor",
			"from",
			"anchor",
			"break",
			"this.command",
			"anchor.",
			"depth",
			"index()",
			"{ ...",
			"this.editor.selection.$anchor",
			"canLink",
			"tooltip",
			" as MarkSpec",
			"node as HTMLElement",
			"(dom as HTMLElement)",
			"MarkSpec",
			"\"",
			"selected",
			"selection",
			"$anchor",
			"$head",
			"link",
			"text",
			"DeleteModal",
			"<confirm-dialogue",
			"this.view.state.selection",
			"this.view.state.",
			"select",
			"selectedMarks",
			"state",
			"state/",
			"_",
			"isElement",
			"Element",
			"isElement",
			"  "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"/modules/",
			"$elements",
			"DEFAULT_ELEMENT",
			"isElement",
			"ELEMENTS_UPDATED",
			"ELEMENT_ID_PREFIX",
			"'",
			"\\t"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1530,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"mde.match_heading_hashes": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 272,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/modules/db/element.js",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3021,
						"regions":
						{
						},
						"selection":
						[
							[
								1726,
								1726
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 1424.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3758,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										172,
										183
									],
									[
										345,
										356
									],
									[
										585,
										596
									],
									[
										782,
										793
									],
									[
										916,
										927
									],
									[
										1067,
										1078
									],
									[
										1377,
										1388
									],
									[
										1581,
										1592
									],
									[
										1795,
										1806
									],
									[
										1976,
										1987
									],
									[
										2199,
										2210
									],
									[
										2406,
										2417
									],
									[
										2730,
										2741
									],
									[
										3010,
										3021
									],
									[
										3260,
										3271
									],
									[
										3622,
										3633
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								134,
								140
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/pages/projects/_projectId/elements/_elementId/index.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3553,
						"regions":
						{
						},
						"selection":
						[
							[
								1315,
								1332
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 555.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/components/network/connection-filter.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3082,
						"regions":
						{
						},
						"selection":
						[
							[
								1626,
								1634
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 676.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 47.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 267.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/npm.sublime-build",
	"project": "Smilodon.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"smilodon/src/package.json"
			],
			[
				"connection-filter",
				"smilodon/src/components/network/connection-filter.vue"
			],
			[
				"app-n",
				"src/components/app-nav.vue"
			],
			[
				"bread",
				"src/components/breadcrumb.vue"
			],
			[
				"icons",
				"src/utils/icons.js"
			],
			[
				"icon",
				"src/utils/icons.js"
			],
			[
				"diff",
				"src/managers/diff.js"
			],
			[
				"config",
				"src/utils/config.js"
			],
			[
				"example",
				"src/pages/example.vue"
			],
			[
				"icon-vi",
				"src/components/icon-view.vue"
			],
			[
				"assert",
				"utils/assert.js"
			],
			[
				"pop",
				"components/popup-button.vue"
			],
			[
				"icon-",
				"components/icon-view.vue"
			],
			[
				"with st",
				"mixins/with-store.js"
			],
			[
				"filtered ta",
				"components/table/filtered-table.vue"
			],
			[
				"entity tabl",
				"components/entities/entity-table.vue"
			],
			[
				"managers/tr",
				"managers/tree.js"
			],
			[
				"asser",
				"utils/assert.js"
			],
			[
				"nuxt",
				"nuxt.config.js"
			],
			[
				"pac",
				"package.json"
			],
			[
				"icon vi",
				"components/icon-view.vue"
			],
			[
				"main-",
				"components/main-nav.vue"
			],
			[
				"packa",
				"package.json"
			],
			[
				"with-em",
				"node_modules/@npmcli/fs/lib/with-temp-dir.js"
			],
			[
				"tag-li",
				"components/tag-list.vue"
			],
			[
				"confir",
				"components/confirm-dialogue.vue"
			],
			[
				"tailw",
				"tailwind.config.js"
			],
			[
				"tailwin",
				"tailwind.config.js"
			],
			[
				"confi",
				"utils/config.js"
			],
			[
				"read",
				"README.md"
			],
			[
				"readm",
				"node_modules/unplugin/node_modules/webpack-sources/lib/helpers/readMappings.js"
			],
			[
				"sty",
				"assets/styles.css"
			],
			[
				"wrap-ansi",
				"node_modules/wrap-ansi/index.js"
			],
			[
				"string-width ind",
				"node_modules/string-width/index.js"
			],
			[
				"utils",
				"aegean-app/.nuxt/utils.js"
			],
			[
				".env",
				"aegean-app/.env"
			],
			[
				"meta",
				"aegean-app/utils/meta.js"
			],
			[
				"footer",
				"components/FooterSection.vue"
			],
			[
				"info",
				"components/buttons/InfoButton.vue"
			],
			[
				"adversaryv",
				"components/system/AdversaryView.vue"
			],
			[
				"withc",
				"mixins/WithCharacter.js"
			],
			[
				"crea",
				"utils/character/creator.js"
			],
			[
				"radioac",
				"components/buttons/RadioAction.vue"
			],
			[
				"career",
				"pages/characters/_characterId/careers.vue"
			],
			[
				"charac",
				"components/system/CharacterProgress.vue"
			],
			[
				"foo",
				"components/FooterSection.vue"
			],
			[
				"charac creator",
				"utils/character/creator.js"
			],
			[
				"charac cre",
				"node_modules/micromark/dist/tokenize/character-reference.js"
			],
			[
				"character/cre",
				"utils/character/creator.js"
			],
			[
				"equip",
				"pages/characters/_characterId/equipment.vue"
			],
			[
				"data.js",
				"state/data.js"
			],
			[
				"accordion",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"equipe",
				"static/data/equipment.json"
			],
			[
				"infobu",
				"components/buttons/InfoButton.vue"
			],
			[
				"defini",
				"components/DefinitionTerm.vue"
			],
			[
				"cardview",
				"components/CardView.vue"
			],
			[
				"defin",
				"components/DefinitionTerm.vue"
			],
			[
				"skills",
				"pages/characters/_characterId/skills.vue"
			],
			[
				"styl",
				"assets/styles.css"
			],
			[
				"advers",
				"components/system/AdversaryView.vue"
			],
			[
				"style",
				"assets/styles.css"
			],
			[
				"s",
				"assets/styles.css"
			],
			[
				"adversary",
				"components/system/AdversaryView.vue"
			],
			[
				"jest",
				"jest.config.js"
			],
			[
				"config.",
				"utils/config.js"
			],
			[
				"defi",
				"components/DefinitionTerm.vue"
			],
			[
				"list",
				"components/ListFilter.vue"
			],
			[
				"talent",
				"static/data/talents.json"
			],
			[
				"statview",
				"components/system/StatView.vue"
			],
			[
				"markd",
				"components/MarkdownContent.vue"
			],
			[
				"listfil",
				"components/ListFilter.vue"
			],
			[
				"all.json",
				"static/data/adversaries/all.json"
			],
			[
				"all.",
				"node_modules/async/all.js"
			],
			[
				"markdown",
				"components/MarkdownContent.vue"
			],
			[
				"card",
				"components/CardView.vue"
			],
			[
				"tagvi",
				"components/TagView.vue"
			],
			[
				"nuxt.",
				"nuxt.config.js"
			],
			[
				"acco",
				"components/accordion/AccordionItem.vue"
			],
			[
				"background",
				"components/system/BackgroundView.vue"
			],
			[
				"acc",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"accor",
				"components/accordion/AccordionItem.vue"
			],
			[
				"filter",
				"plugins/filters.js"
			],
			[
				"iconvie",
				"components/IconView.vue"
			],
			[
				".card",
				"node_modules/.cache/babel-loader/d0cc8339acede1b5436da6f2e5eee818.json.gz"
			],
			[
				"accord",
				"components/accordion/AccordionGroup.vue"
			],
			[
				"inde",
				"pages/index.vue"
			],
			[
				"accordio",
				"components/accordion/AccordionItem.vue"
			],
			[
				"tabgro",
				"components/tabs/TabGroup.vue"
			],
			[
				"divini",
				"components/system/DivinityView.vue"
			],
			[
				"check",
				"components/forms/CheckBox.vue"
			],
			[
				"iconvi",
				"components/IconView.vue"
			],
			[
				"RADIO",
				"components/forms/RadioGroup.vue"
			],
			[
				"backgr ",
				"components/system/BackgroundView.vue"
			],
			[
				"divine",
				"components/system/DivinityView.vue"
			],
			[
				"divin",
				"static/data/chargen/divinities.json"
			],
			[
				"data",
				"state/data.js"
			],
			[
				"conf",
				"utils/config.js"
			],
			[
				"radio",
				"components/forms/RadioGroup.vue"
			],
			[
				"mainn",
				"components/nav/MainNav.vue"
			],
			[
				"state/ima",
				"state/image.js"
			],
			[
				"chara",
				"components/system/CharacterProgress.vue"
			],
			[
				"divinit",
				"static/data/chargen/divinities.json"
			],
			[
				"herit",
				"static/data/chargen/heritage.json"
			],
			[
				"linkac",
				"components/buttons/LinkAction.vue"
			],
			[
				"string",
				"utils/string.js"
			],
			[
				"tonic",
				"node_modules/pouchdb/tonic-example.js"
			],
			[
				"firebase",
				"plugins/firebase.js"
			],
			[
				"background.js",
				"static/data/chargen/background.json"
			],
			[
				"renderma",
				"components/RenderMarkdown.vue"
			],
			[
				"compon progr",
				"components/system/CharacterProgress.vue"
			],
			[
				"progr",
				"node_modules/webpack/lib/ProgressPlugin.js"
			],
			[
				"chargen",
				"state/chargen.js"
			],
			[
				"adversaryvi",
				"components/system/AdversaryView.vue"
			],
			[
				"step",
				"components/buttons/StepButtons.vue"
			],
			[
				"adversar",
				"components/system/AdversaryView.vue"
			],
			[
				"STAT",
				"components/system/StatBlock.vue"
			],
			[
				"stat",
				"components/system/StatBlock.vue"
			],
			[
				"adver",
				"components/system/AdversaryView.vue"
			],
			[
				"textinp",
				"components/forms/TextInput.vue"
			],
			[
				"textin",
				"components/forms/TextInput.vue"
			],
			[
				"listfilter",
				"components/forms/ListFilter.vue"
			],
			[
				"statblo",
				"components/system/StatBlock.vue"
			],
			[
				"character",
				"state/character.js"
			],
			[
				"heritage.js",
				"static/data/chargen/heritage.json"
			],
			[
				"heritage.v",
				"pages/characters/_characterId/heritage.vue"
			],
			[
				"charge",
				"state/chargen.js"
			],
			[
				"assets/st",
				"assets/styles.css"
			],
			[
				"messageview",
				"components/MessageView.vue"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 333.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 600.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 278.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
